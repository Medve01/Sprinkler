# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        poetry-version: [1.1.8]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install project
        run: poetry install
      - name: isort check
        run: poetry run isort -c sprinkler
      - name: Static type checking (mypy)
        run: poetry run mypy --install-types --non-interactive --ignore-missing-imports sprinkler/
      - name: Static analysis
        run: poetry run pylint sprinkler
      - name: Code Vulnerability Scan (bandit)
        run: poetry run bandit -r sprinkler
      - name: Unit tests
        run: poetry run pytest -vv --cov sprinkler --cov-report term-missing --cov-report html --html=pytest-report.html --self-contained-html --cov-fail-under 100
      - name: Poetry export
        run: poetry export -f requirements.txt --output requirements.txt
      # - name: Dependency safety check
      #   run: poetry run safety check -r requirements.txt



